on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Environment Variables
      run: |
        echo 'SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}' >> .env
        echo 'POSTGRES_USER=${{ secrets.POSTGRES_USER }}' >> .env
        echo 'POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}' >> .env
        echo 'POSTGRES_DB=${{ secrets.POSTGRES_DB }}' >> .env
        echo 'POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}' >> .env
        echo 'POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}' >> .env
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Apply Migrations
      run: |
        python manage.py makemigrations
        python manage.py migrate
    - name: Run Lint
      run: |
        flake8 .
    - name: Report Coverage
      run: |
        python manage.py migrate --database=default
        python manage.py migrate auth
        python manage.py showmigrations
        python manage.py test lettings.tests profiles.tests --noinput
        coverage run --rcfile=.coveragerc manage.py test lettings.tests profiles.tests --noinput
        coverage report --rcfile=.coveragerc
    - name: Check Coverage
      id: coverage-check
      run: |
        COVERAGE=$(coverage report | grep TOTAL | awk '{print $6}' | sed 's/%//')
        echo "Coverage is $COVERAGE%"
        if [ "$COVERAGE" -lt 80 ]; then
          echo "Coverage is below 80%"
          exit 1
        fi
        echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Set up Environment Variables
      run: |
        echo 'DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}' >> .env
        echo 'DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}' >> .env
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Docker image
      run: |
        IMAGE_TAG=${{ github.sha }}
        docker build -t claireruysschaert/p13oc:$IMAGE_TAG .
    - name: Push Docker image
      run: |
        IMAGE_TAG=${{ github.sha }}
        docker push claireruysschaert/p13oc:$IMAGE_TAG
